exp(.0192)
xaringanExtra::use_scribble()
# highlightStyle: solarized-dark
library(tidyverse)
library(tidymodels)
library(ggtext)
library(knitr)
library(kableExtra)
library(patchwork)
library(plotly)
library(widgetframe)
library(patchwork)
library(openintro)
library(ggridges)
set.seed(1234)
library(openintro)
glimpse(email)
email %>%
group_by(spam) %>%
summarise(mean_num_char = mean(num_char))
spam_fit <- logistic_reg() %>%
set_engine("glm") %>%
fit(spam ~ num_char, data = email, family = "binomial")
tidy(spam_fit)
probabilities <- spam_fit %>% predict(3, type = "response")
values <- c(2,3,4)
probabilities <- spam_fit %>% predict(values, type = "response")
test.values <- data.frame(num_char = c(20,  180))
probabilities <- spam_fit %>% predict(test.values, type = "response")
model <- glm( spam ~ num_emails, data = email, family = binomial)
model <- glm( spam ~ num_char data = email, family = binomial)
model <- glm( spam ~ num_char ,data = email, family = binomial)
test.values <- data.frame(num_char = c(20,  180))
probabilities <- model %>% predict(test.values, type = "response")
probabilities
test.values <- data.frame(num_char = c(2,  4))
model <- glm( spam ~ num_char ,data = email, family = binomial)
probabilities <- model %>% predict(test.values, type = "response")
model %>% predict(test.values, type = "response")
spam_fit <-  glm( spam ~ num_char, data = email, family = binomial)
tidy(spam_fit)
spam_fit %>% predict(test.values, type = "response")
test.values <- data.frame(num_char = c(2,  4))
spam_fit %>% predict(test.values, type = "response")
spam_fit %>% round(predict(test.values, type = "response"),2)
round(spam_fit %>% predict(test.values, type = "response"))
round(spam_fit %>% predict(test.values, type = "response"),2)
spam_fit %>% predict(test.values, type = "response")
spam_fit %>% predict(test.values, type = "response") %>%
round(2)
test.values <- data.frame(num_char = c(15, 40))
spam_fit %>% predict(test.values, type = "response") %>%
round(2)
newdata <- tibble(
num_char = c(2, 15, 40),
color    = c("#A7D5E8", "#e9d968", "#8fada7"),
shape    = c(22, 24, 23)
)
y_hat <- predict(spam_fit, newdata, type = "response")
p_hat <- exp(y_hat) / (1 + exp(y_hat))
newdata <- newdata %>%
bind_cols(
y_hat = y_hat,
p_hat = p_hat
)
spam_aug <- augment(spam_fit$fit) %>%
mutate(prob = exp(.fitted) / (1 + exp(.fitted)))
newdata <- tibble(
num_char = c(2, 15, 40),
color    = c("#A7D5E8", "#e9d968", "#8fada7"),
shape    = c(22, 24, 23)
)
spam_fit <- logistic_reg() %>%
set_engine("glm") %>%
fit(spam ~ num_char, data = email, family = "binomial")
y_hat <- predict(spam_fit, newdata, type = "raw")
p_hat <- exp(y_hat) / (1 + exp(y_hat))
newdata <- newdata %>%
bind_cols(
y_hat = y_hat,
p_hat = p_hat
)
spam_aug <- augment(spam_fit$fit) %>%
mutate(prob = exp(.fitted) / (1 + exp(.fitted)))
ggplot(spam_aug, aes(x = num_char)) +
geom_point(aes(y = as.numeric(spam)-1, color = spam), alpha = 0.3) +
scale_color_manual(values = c("#DEB4A0", "#CA235F")) +
scale_y_continuous(breaks = c(0, 1)) +
guides(color = FALSE) +
geom_line(aes(y = prob)) +
geom_point(data = newdata, aes(x = num_char, y = p_hat),
fill = newdata$color, shape = newdata$shape,
stroke = 1, size = 6) +
labs(
x = "Number of characters (in thousands)",
y = "Spam",
title = "Spam vs. number of characters"
)
spam_fit_tidy <- logistic_reg() %>%
set_engine("glm") %>%
fit(spam ~ num_char, data = email, family = "binomial")
spam_fit <-  glm( spam ~ num_char, data = email, family = binomial)
spam_fit_tidy %>% predict(test.values, type = "raw") %>%
round(2)
test.values <- data.frame(num_char = c(2))
spam_fit %>% predict(test.values, type = "response") %>%
round(2)
spam_fit_tidy %>% predict(test.values, type = "raw") %>%
round(2)
